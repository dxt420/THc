# Generated by Django 2.1 on 2018-09-11 07:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=30)),
                ('time', models.CharField(max_length=30)),
                ('notify', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(max_length=30)),
                ('bed_type', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BedAllotment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_number', models.CharField(blank=True, max_length=30)),
                ('allotment_time', models.CharField(max_length=30)),
                ('discharge_time', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BloodBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(max_length=30)),
                ('qty', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BloodDonor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=30)),
                ('age', models.CharField(max_length=30)),
                ('name', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=30)),
                ('last_donation', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departmentname', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=200)),
                ('depticon', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='DiagnosisReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=30)),
                ('date', models.CharField(max_length=30)),
                ('time', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=3000)),
                ('doc_type', models.CharField(max_length=30)),
                ('diagnosis_file', models.FileField(upload_to='media/')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('number', models.CharField(max_length=30)),
                ('creation_date', models.CharField(max_length=30)),
                ('due_date', models.CharField(max_length=30)),
                ('vat_percentage', models.CharField(max_length=30)),
                ('discount_amount', models.CharField(max_length=30)),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], max_length=10)),
                ('description', models.CharField(max_length=30)),
                ('amount', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('medicine_category', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=30)),
                ('price', models.CharField(max_length=30)),
                ('manufacturing_company', models.CharField(max_length=30)),
                ('status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.TextField()),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['pub_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('invoice_number', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=30)),
                ('creation_date', models.CharField(max_length=30)),
                ('due_date', models.CharField(max_length=30)),
                ('vat_percentage', models.CharField(max_length=30)),
                ('discount_amount', models.IntegerField()),
                ('status', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=30)),
                ('year', models.CharField(max_length=30)),
                ('basic', models.IntegerField()),
                ('total_allowance', models.IntegerField()),
                ('total_deduction', models.IntegerField()),
                ('net', models.IntegerField()),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollAllowance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allowance', models.IntegerField()),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Payroll')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollDeduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduction', models.IntegerField()),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Payroll')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=30)),
                ('time', models.CharField(blank=True, max_length=30)),
                ('case_history', models.CharField(max_length=30)),
                ('medication', models.CharField(max_length=30)),
                ('note', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.PositiveSmallIntegerField(choices=[(1, 'Operation'), (2, 'Birth'), (3, 'Death')])),
                ('date', models.CharField(max_length=30)),
                ('description', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='RequestedAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.PositiveSmallIntegerField(choices=[(1, 'doctor'), (2, 'nurse'), (3, 'accountant'), (4, 'labartorist'), (5, 'admin'), (6, 'admin'), (7, 'admin'), (8, 'receptionist')], primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=30)),
                ('usericon', models.ImageField(blank=True, upload_to='media/')),
                ('is_doctor', models.BooleanField(blank=True, default=False)),
                ('is_nurse', models.BooleanField(blank=True, default=False)),
                ('is_accountant', models.BooleanField(blank=True, default=False)),
                ('is_labaratorist', models.BooleanField(blank=True, default=False)),
                ('is_pharmacist', models.BooleanField(blank=True, default=False)),
                ('is_patient', models.BooleanField(blank=True, default=False)),
                ('is_admin', models.BooleanField(blank=True, default=False)),
                ('is_receptionist', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('usericon', models.ImageField(upload_to='media/')),
                ('departmentname', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('blood_group', models.CharField(max_length=30)),
                ('sex', models.CharField(max_length=8)),
                ('dob', models.CharField(max_length=30)),
                ('usericon', models.ImageField(upload_to='media/')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='role',
            field=models.ManyToManyField(to='Hospital.Role'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='message',
            name='receiver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requestedappointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='requestedappointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='report',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='report',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='payroll',
            name='employee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Employee'),
        ),
        migrations.AddField(
            model_name='paymenthistory',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='diagnosisreport',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='diagnosisreport',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='bedallotment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital.Patient'),
        ),
    ]
